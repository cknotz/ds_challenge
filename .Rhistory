table$link <- paste0("https://en.wikipedia.org/wiki/",table$link)
table$onclick <- sprintf("window.open(\"%s%s\")","",table$link)
# German links
table$link_de <- paste0("https://de.wikipedia.org/wiki/Olympische_Sommerspiele_2016/Teilnehmer_(",
table$country_de,
")") %>%
gsub(" ","_",.)
table$onclick_de <- sprintf("window.open(\"%s%s\")","",table$link_de)
# Reshape for graph
table <- pivot_longer(table,
cols = c("Gold","Silber","Bronze"),
names_to = "medal",
values_to = "count")
# Values for tooltip
tiptab <- pivot_wider(table[,c("country","medal","count")],
id_cols = c("country","medal"),
names_from = "medal",
values_from = "count")
# Merging
table <- merge(table,tiptab,by = "country")
rm(tiptab)
table$medfac <- NA
table$medfac[table$medal=="Bronze"] <- 1
table$medfac[table$medal=="Silber"] <- 2
table$medfac[table$medal=="Gold"] <- 3
table$medfac <- factor(table$medfac,
levels = c(1,2,3),
labels = c("Bronze","Silber","Gold"))
View(table)
table <- table[order(-table$Total,table$c_abbrev,-table$medfac),]
# Save as backup
saveRDS(table,file = "backup.rds")
saveRDS(table,file = "www/backup.rds")
tooltip_css <- "background-color:gray;color:white;padding:10px;border-radius:5px;font-family: Lora, sans-serif;font-weight:lighter;font-size:12px;"
p <- ggplot(table[1:(3*15),], aes(x=reorder(c_abbrev,Total),
y=count, fill = medfac)) +
geom_bar_interactive(position="stack", stat="identity",color = "gray", size=.05,
aes(tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Gesamtzahl Medaillen: ",Total,"\n",
"Gold: ",Gold,"\n",
"Silber: ",Silber,"\n",
"Bronze: ",Bronze,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de)) +
coord_flip() +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
scale_fill_manual(values = c("#d95f0e","#a6cee3","#fff7bc"),
guide = guide_legend(reverse = TRUE)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
p <- ggplot(table[1:(3*10),], aes(x=reorder(c_abbrev,Total),
y=count, fill = medfac)) +
geom_bar_interactive(position="stack", stat="identity",color = "gray", size=.05,
aes(tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Gesamtzahl Medaillen: ",Total,"\n",
"Gold: ",Gold,"\n",
"Silber: ",Silber,"\n",
"Bronze: ",Bronze,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de)) +
coord_flip() +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
scale_fill_manual(values = c("#d95f0e","#a6cee3","#fff7bc"),
guide = guide_legend(reverse = TRUE)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
ggplot(table,aes(x=c_abbrev,y=no)) +
geom_bar(stat = "identity")
ggplot(table,aes(x=c_abbrev,y=no)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(table,aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
coord_flip()
View(table)
table$c_abbrev[which(table$c_abbrev==NA)]
ggplot(table,aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
unique(table$c_abbrev)
table$country[which(table$c_abbrev==NA)]
table$country[which(is.na(table$c_abbrev))]
table$c_abbrev[which(table$country=="Virgin Islands")] <- "VIR"
ggplot(table,aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
ggplot(reorder(table,no),aes(x=c_abbrev,y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
ggplot(reorder(table,table$no),aes(x=c_abbrev,y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% reorder(table$no)
table[order(-table$Total,table$c_abbrev,-table$medfac),] %>%
ggplot(.[1:(3*10),], aes(x=reorder(c_abbrev,Total),
y=count, fill = medfac)) +
geom_bar_interactive(position="stack", stat="identity",color = "gray", size=.05,
aes(tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Gesamtzahl Medaillen: ",Total,"\n",
"Gold: ",Gold,"\n",
"Silber: ",Silber,"\n",
"Bronze: ",Bronze,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de)) +
coord_flip() +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
scale_fill_manual(values = c("#d95f0e","#a6cee3","#fff7bc"),
guide = guide_legend(reverse = TRUE)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(no) %>%
ggplot(aes(x=c_abbrev,y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(no) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% slice(3*10, order_by(no))
table %>% slice(3*10, order_by="no")
table %>% slice_head(3*10, order_by="no")
table %>% slice_min(n=3*10, order_by="no",with_ties = T)
table %>% slice_min(n=(3*10), order_by="no",with_ties = T)
table %>% arrange(no) %>%
slice_head(n=3*4)
table %>% arrange(no) %>%
slice_head(n=3*4) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(no) %>%
slice_head(n=3*4) %>%
ggplot(aes(x=c_abbrev,y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(-no) %>%
slice_head(n=3*4) %>%
ggplot(aes(x=c_abbrev,y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(-no) %>%
slice_head(n=3*4) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(-no) %>%
slice_head(n=3*20) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(-no) %>%
slice_head(n=3*207) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(-no) %>%
slice_head(n=3*100) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(-table$Total,table$c_abbrev,-table$medfac) %>%
slice_head(n=3*10) %>%
ggplot(aes(x=reorder(c_abbrev,Total),
y=count, fill = medfac)) +
geom_bar_interactive(position="stack", stat="identity",color = "gray", size=.05,
aes(tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Gesamtzahl Medaillen: ",Total,"\n",
"Gold: ",Gold,"\n",
"Silber: ",Silber,"\n",
"Bronze: ",Bronze,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de)) +
coord_flip() +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
scale_fill_manual(values = c("#d95f0e","#a6cee3","#fff7bc"),
guide = guide_legend(reverse = TRUE)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(-table$Total,table$c_abbrev,-table$medfac) %>%
slice_head(n=3*20) %>%
ggplot(aes(x=reorder(c_abbrev,Total),
y=count, fill = medfac)) +
geom_bar_interactive(position="stack", stat="identity",color = "gray", size=.05,
aes(tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Gesamtzahl Medaillen: ",Total,"\n",
"Gold: ",Gold,"\n",
"Silber: ",Silber,"\n",
"Bronze: ",Bronze,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de)) +
coord_flip() +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
scale_fill_manual(values = c("#d95f0e","#a6cee3","#fff7bc"),
guide = guide_legend(reverse = TRUE)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
table %>% arrange(-table$Total,table$c_abbrev) %>%
slice_head(n=3*20) %>%
ggplot(aes(x=reorder(c_abbrev,Total),
y=count, fill = medfac)) +
geom_bar_interactive(position="stack", stat="identity",color = "gray", size=.05,
aes(tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Gesamtzahl Medaillen: ",Total,"\n",
"Gold: ",Gold,"\n",
"Silber: ",Silber,"\n",
"Bronze: ",Bronze,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de)) +
coord_flip() +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
scale_fill_manual(values = c("#d95f0e","#a6cee3","#fff7bc"),
guide = guide_legend(reverse = TRUE)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
p <- table %>% arrange(-table$Total,table$c_abbrev) %>%
slice_head(n=3*20) %>%
ggplot(aes(x=reorder(c_abbrev,Total),
y=count, fill = medfac)) +
geom_bar_interactive(position="stack", stat="identity",color = "gray", size=.05,
aes(tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Gesamtzahl Medaillen: ",Total,"\n",
"Gold: ",Gold,"\n",
"Silber: ",Silber,"\n",
"Bronze: ",Bronze,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de)) +
coord_flip() +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
scale_fill_manual(values = c("#d95f0e","#a6cee3","#fff7bc"),
guide = guide_legend(reverse = TRUE)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
table %>% arrange(-no) %>%
slice_head(n=3*100) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(-no) %>%
slice_head(n=3*50) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(-no) %>%
slice_head(n=3*50) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
ylab("") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(-no) %>%
slice_head(n=3*50) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
ylab("Number of athletes") +
xlab("") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>% arrange(-no) %>%
slice_head(n=3*50) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar(stat = "identity") +
ylab("Athleten") +
xlab("") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
