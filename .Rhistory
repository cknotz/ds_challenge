html_table(fill = T)
# Cleaning
table <- table[which(grepl("Totals", table$NOC)!=TRUE),]
table <- table %>%
separate(NOC,
c("country","c_abbrev"),
sep = -6)
table$c_abbrev <- gsub("[()]", "", table$c_abbrev)
table$c_abbrev <- gsub(" ", "",table$c_abbrev, fixed = T)
table$c_abbrev <- gsub("(^\\s+)|(\\s+$)", "", table$c_abbrev)
alltables <- html_nodes(page, "table")
table <- alltables[[2]] %>%
html_table(fill = T)
# Cleaning
table <- table[which(grepl("Totals", table$NOC)!=TRUE),]
table <- table %>%
separate(NOC,
c("country","c_abbrev"),
sep = -6)
table$c_abbrev <- table$c_abbrev %>%
gsub("[()]", "") %>%
gsub("(^\\s+)|(\\s+$)", "")
table$c_abbrev <- table$c_abbrev %>%
gsub("[()]", "",.) %>%
gsub("(^\\s+)|(\\s+$)", "",.)
alltables <- html_nodes(page, "table")
table <- alltables[[2]] %>%
html_table(fill = T)
# Cleaning
table <- table[which(grepl("Totals", table$NOC)!=TRUE),]
table <- table %>%
separate(NOC,
c("country","c_abbrev"),
sep = -6)
table$c_abbrev <- gsub("[()]|(^\\s+)|(\\s+$)", "",table$c_abbrev)
rm(alltables,page, url, xpath)
url <- "https://en.wikipedia.org/wiki/2016_Summer_Olympics_medal_table"
xpath <- "/html/body/div[3]/div[3]/div[5]/div[1]/table[2]"
page <- read_html(url)
page %>%
html_nodes(xpath = "//td/a") %>%
html_attr("href")
View(table)
page %>%
html_nodes(xpath = "//th/a") %>%
html_attr("href")
links <- page %>%
html_nodes(xpath = "//th/a") %>%
html_attr("href")
links_cntry <- gsub("/wiki/|_at_the_2016_Summer_Olympics","links")
links_cntry <- gsub("/wiki/|_at_the_2016_Summer_Olympics", links)
links_cntry <- gsub("/wiki/|_at_the_2016_Summer_Olympics", "", links)
links_cntry
links_cntry <- gsub("_", " ", links_cntry)
links_cntry
links <- data.frame(links_cntry,links)
View(links)
links <- links[which(grepl("Summer Olympic|Winter Olympic",links$links_cntry)!=True),]
links <- links[which(grepl("Summer Olympic|Winter Olympic",links$links_cntry)!=TRUE),]
View(links)
rm(links, links_cntry)
link <- page %>%
html_nodes(xpath = "//th/a") %>%
html_attr("href")
country <- gsub("/wiki/|_at_the_2016_Summer_Olympics", "", link)
country <- gsub("_", " ", country)
links <- data.frame(country,link)
links <- links[which(grepl("Summer Olympic|Winter Olympic",links$country)!=TRUE),]
links$link <- gsub("/wiki/", "https://en.wikipedia.org/wiki/",links$link)
View(links)
?merge
table <- merge(table,links,
by = "country")
View(table)
rm(alltables,page, url, xpath,country,link, links) # removing clutter
ggplot(table, aes(x=c_abbrev)) +
geom_bar(aes(y=Gold))
ggplot(table, aes(x=c_abbrev, y=Gold)) +
geom_bar()
tables <- pivot_longer(tables,
cols = c("Gold","Silver","Bronze","Total"),
names_to = "medal",
values_to = "count")
table <- pivot_longer(table,
cols = c("Gold","Silver","Bronze","Total"),
names_to = "medal",
values_to = "count")
View(table)
ggplot(table, aes(x=c_abbrev, y=count,fill = "medal")) +
geom_bar()
ggplot(table, aes(x=c_abbrev, y=count,fill = "medal")) +
geom_bar(position="dodge", stat="identity")
url <- "https://en.wikipedia.org/wiki/2016_Summer_Olympics_medal_table"
xpath <- "/html/body/div[3]/div[3]/div[5]/div[1]/table[2]"
page <- read_html(url)
# Extracting table
alltables <- html_nodes(page, "table")
table <- alltables[[2]] %>%
html_table(fill = T)
# Cleaning
table <- table[which(grepl("Totals", table$NOC)!=TRUE),]
table <- table %>%
separate(NOC,
c("country","c_abbrev"),
sep = -6)
table$c_abbrev <- gsub("[()]|(^\\s+)|(\\s+$)", "",table$c_abbrev)
# Reading links
link <- page %>%
html_nodes(xpath = "//th/a") %>%
html_attr("href")
country <- gsub("/wiki/|_at_the_2016_Summer_Olympics", "", link)
country <- gsub("_", " ", country)
links <- data.frame(country,link)
links <- links[which(grepl("Summer Olympic|Winter Olympic",links$country)!=TRUE),]
links$link <- gsub("/wiki/", "https://en.wikipedia.org/wiki/",links$link)
# Merge
table <- merge(table,links,
by = "country")
table$Total <- NULL
rm(alltables,page, url, xpath,country,link, links) # removing clutter
# Reshape for graph
table <- pivot_longer(table,
cols = c("Gold","Silver","Bronze"),
names_to = "medal",
values_to = "count")
ggplot(table, aes(x=c_abbrev, y=count,fill = "medal")) +
geom_bar(position="stack", stat="identity")
ggplot(table, aes(x=c_abbrev, y=count, fill = medal)) +
geom_bar(position="stack", stat="identity")
url <- "https://en.wikipedia.org/wiki/2016_Summer_Olympics_medal_table"
xpath <- "/html/body/div[3]/div[3]/div[5]/div[1]/table[2]"
page <- read_html(url)
# Extracting table
alltables <- html_nodes(page, "table")
table <- alltables[[2]] %>%
html_table(fill = T)
# Cleaning
table <- table[which(grepl("Totals", table$NOC)!=TRUE),]
table <- table %>%
separate(NOC,
c("country","c_abbrev"),
sep = -6)
table$c_abbrev <- gsub("[()]|(^\\s+)|(\\s+$)", "",table$c_abbrev)
# Reading links
link <- page %>%
html_nodes(xpath = "//th/a") %>%
html_attr("href")
country <- gsub("/wiki/|_at_the_2016_Summer_Olympics", "", link)
country <- gsub("_", " ", country)
links <- data.frame(country,link)
links <- links[which(grepl("Summer Olympic|Winter Olympic",links$country)!=TRUE),]
links$link <- gsub("/wiki/", "https://en.wikipedia.org/wiki/",links$link)
# Merge
table <- merge(table,links,
by = "country")
rm(alltables,page, url, xpath,country,link, links) # removing clutter
# Reshape for graph
table <- pivot_longer(table,
cols = c("Gold","Silver","Bronze"),
names_to = "medal",
values_to = "count")
?reorder
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity")
View(table)
table$medal <- factor(table$medal, labels = c("Gold","Silver","Bronze"))
# Graph
#######
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity")
url <- "https://en.wikipedia.org/wiki/2016_Summer_Olympics_medal_table"
xpath <- "/html/body/div[3]/div[3]/div[5]/div[1]/table[2]"
page <- read_html(url)
# Extracting table
alltables <- html_nodes(page, "table")
table <- alltables[[2]] %>%
html_table(fill = T)
# Cleaning
table <- table[which(grepl("Totals", table$NOC)!=TRUE),]
table <- table %>%
separate(NOC,
c("country","c_abbrev"),
sep = -6)
table$c_abbrev <- gsub("[()]|(^\\s+)|(\\s+$)", "",table$c_abbrev)
# Reading links
link <- page %>%
html_nodes(xpath = "//th/a") %>%
html_attr("href")
country <- gsub("/wiki/|_at_the_2016_Summer_Olympics", "", link)
country <- gsub("_", " ", country)
links <- data.frame(country,link)
links <- links[which(grepl("Summer Olympic|Winter Olympic",links$country)!=TRUE),]
links$link <- gsub("/wiki/", "https://en.wikipedia.org/wiki/",links$link)
# Merge
table <- merge(table,links,
by = "country")
rm(alltables,page, url, xpath,country,link, links) # removing clutter
# Reshape for graph
table <- pivot_longer(table,
cols = c("Gold","Silver","Bronze"),
names_to = "medal",
values_to = "count")
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
theme_bw() +
theme(legend.position = "bottom")
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = NULL)
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = "")
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank())
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank())
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,vjust = .5))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,hjust = .5))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,hjust = -.5))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,hjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,hjust = 0))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,hjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 8,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 7,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
scale_color_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
xlim(0,125) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
xlim(c(0,125)) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
ylim(c(0,125)) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
url <- "https://en.wikipedia.org/wiki/2016_Summer_Olympics_medal_table"
xpath <- "/html/body/div[3]/div[3]/div[5]/div[1]/table[2]"
page <- read_html(url)
# Extracting table
alltables <- html_nodes(page, "table")
table <- alltables[[2]] %>%
html_table(fill = T)
# Cleaning
table <- table[which(grepl("Totals", table$NOC)!=TRUE),]
table <- table %>%
separate(NOC,
c("country","c_abbrev"),
sep = -6)
table$c_abbrev <- gsub("[()]|(^\\s+)|(\\s+$)", "",table$c_abbrev)
# Reading links
link <- page %>%
html_nodes(xpath = "//th/a") %>%
html_attr("href")
country <- gsub("/wiki/|_at_the_2016_Summer_Olympics", "", link)
country <- gsub("_", " ", country)
links <- data.frame(country,link)
links <- links[which(grepl("Summer Olympic|Winter Olympic",links$country)!=TRUE),]
links$link <- gsub("/wiki/", "https://en.wikipedia.org/wiki/",links$link)
# Merge
table <- merge(table,links,
by = "country")
rm(alltables,page, url, xpath,country,link, links) # removing clutter
# Reshape for graph
table <- pivot_longer(table,
cols = c("Gold","Silver","Bronze"),
names_to = "medal",
values_to = "count")
table$medal <- factor(table$medal, labels = c("Gold","Silver","Bronze"))
# Graph
#######
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
# Scraping Wikipedia Tables
###########################
library(ggplot2)
library(rvest)
library(dplyr)
library(tidyverse)
# Downloading website
url <- "https://en.wikipedia.org/wiki/2016_Summer_Olympics_medal_table"
xpath <- "/html/body/div[3]/div[3]/div[5]/div[1]/table[2]"
page <- read_html(url)
# Extracting table
alltables <- html_nodes(page, "table")
table <- alltables[[2]] %>%
html_table(fill = T)
# Cleaning
table <- table[which(grepl("Totals", table$NOC)!=TRUE),]
table <- table %>%
separate(NOC,
c("country","c_abbrev"),
sep = -6)
table$c_abbrev <- gsub("[()]|(^\\s+)|(\\s+$)", "",table$c_abbrev)
# Reading links
link <- page %>%
html_nodes(xpath = "//th/a") %>%
html_attr("href")
country <- gsub("/wiki/|_at_the_2016_Summer_Olympics", "", link)
country <- gsub("_", " ", country)
links <- data.frame(country,link)
links <- links[which(grepl("Summer Olympic|Winter Olympic",links$country)!=TRUE),]
links$link <- gsub("/wiki/", "https://en.wikipedia.org/wiki/",links$link)
# Merge
table <- merge(table,links,
by = "country")
rm(alltables,page, url, xpath,country,link, links) # removing clutter
# Reshape for graph
table <- pivot_longer(table,
cols = c("Gold","Silver","Bronze"),
names_to = "medal",
values_to = "count")
table$medal <- factor(table$medal, labels = c("Gold","Silver","Bronze"))
# Graph
#######
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
tooltip <- paste0("Country: ",table$country,"/n",
"Gold medals: ",table$count[table$medal=="Gold",])
tooltip <- paste0("Country: ",table$country,"/n",
"Gold medals: ",table$count[table$medal=="Gold"],)
tooltip <- paste0("Country: ",table$country,"/n",
"Gold medals: ",table$count[which(table$medal=="Gold"),])
