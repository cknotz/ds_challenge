alternative = "greater",
tol=sqrt(.Machine$double.eps))
rm(test)
test.list <- twoSamplePermutationTestProportion(dat1,dat2,
alternative = "greater",
tol=sqrt(.Machine$double.eps))
test.list
plot(test.list)
test.list <- twoSamplePermutationTestProportion(dat1,dat2,
alternative = "less",
tol=sqrt(.Machine$double.eps))
test.list
test.list <- twoSamplePermutationTestProportion(dat1,dat2,
alternative = "two.sided",
tol=sqrt(.Machine$double.eps))
test.list
?prop.test
set.seed(23)
dat1 <- rbinom(10, size = 1, prob = 0.3)
dat2 <- rbinom(20, size = 1, prob = 0.5)
test.list <- twoSamplePermutationTestProportion(dat1, dat2, alternative = "less")
test.list
set.seed(42)
dat1 <- sample(c(rep_len(1,90),rep_len(0,10))) # Anbieter A (100 zufällige Bewertungen, 90% positiv=1)
dat2 <- c(1,1) # Anbieter B (2 positiv)
test.list <- twoSamplePermutationTestProportion(dat1,dat2,
alternative = "greater",
tol=sqrt(.Machine$double.eps))
test.list
prop.test(x = c(90,2),n = c(100,2))
?prop.test
prop.test(x = c(90,2),n = c(100,2),
alternative = "greater",
correct = T)
prop <- prop.test(x = c(90,2),n = c(100,2),
alternative = "greater",
correct = T)
prop
rm(test.list)
prop$statistic
prop$p.value
prop$estimate
set.seed(42)
dat1 <- sample(c(rep_len(1,90),rep_len(0,10))) # Anbieter A (100 zufällige Bewertungen, 90% positiv=1)
dat2 <- c(1,1) # Anbieter B (2 positiv)
perm <- twoSamplePermutationTestProportion(dat1,dat2,
alternative = "greater")
perm
install.packages("statsr")
discr = read.csv("http://stat.duke.edu/courses/Spring12/sta101.1/lec/discr.csv", h = T)
install.packages("mosaic")
Sleep <- read.csv("http://www.mosaic-web.org/go/datasets/SleepCaffeine.csv")
View(Sleep)
rm(Sleep)
library(statsr)
inference(dat1,dat2,
est="proportion",
type = "ht",
null = 0,
alternative = "greater",
method = "simulation",
seed = 42,
nsim = 100)
anbA <- rbinom(n=1000,size=100,prob = 90/100)
anbB <- rbinom(n=1000,size = 2,prob = 2/2)
diffs <- anbA/100 - anbB/2
hist(diffs)
sum(diffs >=.1)
anbA <- rbinom(n=10000,size=100,prob = 90/100)
anbB <- rbinom(n=10000,size = 2,prob = 2/2)
diffs <- anbA/100 - anbB/2
hist(diffs)
sum(diffs >=.1)
anbA <- rbinom(n=100000,size=100,prob = 90/100)
anbB <- rbinom(n=100000,size = 2,prob = 2/2)
diffs <- anbA/100 - anbB/2
hist(diffs)
sum(diffs >=.1)
anbA <- rbinom(n=10000000000,size=100,prob = 90/100)
anbB <- rbinom(n=10000000000,size = 2,prob = 2/2)
diffs <- anbA/100 - anbB/2
hist(diffs)
sum(diffs >=.1)
anbA <- rbinom(n=1000000,size=100,prob = 90/100)
anbB <- rbinom(n=1000000,size = 2,prob = 2/2)
diffs <- anbA/100 - anbB/2
hist(diffs)
sum(diffs >=.1)
sum(diffs >=-.1)
p <- sum(diffs >=-.1)/1000000
p
sum(diffs >=-.1)/1000000
sum(diffs <=-.1)/1000000
males <- rbinom(n = 100000, size = 31, prob = 40/63)
females <- rbinom(n = 100000, size = 32, prob = 40/63)
differences <- males/31 - females/32
hist(differences)
prop <- prop.test(x = c(90,2),n = c(100,2),
alternative = "greater",
correct = T)
prop$estimate
prop$p.value
dat1 <- sample(c(rep_len(1,90),rep_len(0,10))) # Anbieter A (100 zufällige Bewertungen, 90% positiv=1)
dat2 <- c(1,1) # Anbieter B (2 positiv)
perm <- twoSamplePermutationTestProportion(dat1,dat2,
alternative = "greater")
perm
anbA <- rbinom(n=1000000,size=100,prob = 90/100)
anbB <- rbinom(n=1000000,size = 2,prob = 2/2)
diffs <- anbA/100 - anbB/2
hist(diffs)
rm(males,females,differences)
rm(p,perm,prop)
sum(diffs >=.1)/1000000
anbA <- rbinom(n=1000000,size=100,prob = 90/100)
anbB <- rbinom(n=1000000,size = 2,prob = 75/100)
diffs <- anbA/100 - anbB/2
hist(diffs)
sum(diffs >=.15)/1000000
anbA <- rbinom(n=1000000,size=100,prob = 90/100)
anbB <- rbinom(n=1000000,size =100,prob = 75/100)
diffs <- anbA/100 - anbB/2
hist(diffs)
sum(diffs >=.15)/1000000
sum(diffs >=15)/1000000
diffs <- anbA/100 - anbB/100
hist(diffs)
sum(diffs >=.15)/1000000
anbB <- rbinom(n=1000000,size =100,prob = 15/100)
diffs <- anbA/100 - anbB/100
hist(diffs)
sum(diffs >=.75)/1000000
anbB <- rbinom(n=1000000,size =100,prob = 5/100)
diffs <- anbA/100 - anbB/100
hist(diffs)
sum(diffs >=.75)/1000000
sum(diffs >=0)/1000000
anbA <- rbinom(n=1000000,size=100,prob = 90/100)
anbB <- rbinom(n=1000000,size =2,prob = 2/2)
diffs <- anbA/100 - anbB/2
hist(diffs)
fisher.test(rbind(c(1,9),c(11,3)), alternative="less")
fisher.test(rbind(c(90,2),c(10,0)), alternative="greater")
fisher.test(rbind(c(90,2),c(10,0)), alternative="less")
?fisher.test
rbind(c(90,2),c(10,0))
fisher.test(rbind(c(90,2),c(10,0)), alternative="two.sided")
fisher.test(rbind(c(90,2),c(10,0)), alternative="greater")
fisher.test(rbind(c(90,2),c(10,1)), alternative="greater")
fisher.test(rbind(c(90,2),c(10,2)), alternative="greater")
fisher.test(rbind(c(90,2),c(10,3)), alternative="greater")
fisher.test(rbind(c(90,4),c(10,1)), alternative="greater")
fisher.test(rbind(c(90,2),c(10,0)), alternative="greater")
set.seed(42)
anbA <- rbinom(n=1000000,size=100,prob = 90/100)
anbB <- rbinom(n=1000000,size =50,prob = 1/2)
diffs <- anbA/100 - anbB/2
hist(diffs)
sum(diffs >=.4)/1000000
diffs <- anbA/100 - anbB/50
hist(diffs)
sum(diffs >=.4)/1000000
sum(diffs >=0)/1000000
set.seed(42)
anbA <- rbinom(n=1000000,size=100,prob = 90/100)
anbB <- rbinom(n=1000000,size =2,prob = 2/2)
diffs <- anbA/100 - anbB/2
hist(diffs)
sum(diffs >=0)/1000000
sum(diffs >0)/1000000
sum(diffs>0)
diffs==0
density(diffs)
plot(density(diffs))
?density
plot(density(diffs, bw=.02))
plot(density(diffs, bw=.002))
plot(density(diffs, bw=.01))
library(shiny); runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
?factorial
(factorial(90+2)*factorial(10+0)*factorial(90+10)*factorial(2+0))/(factorial(90)*factorial(10)*factorial(2)*factorial(0)*factorial(102))
fisher.test(rbind(c(90,2),c(10,0)), alternative="greater")
fisher.test(rbind(c(90,2),c(10,0)), alternative="less")
library(ggplot2)
library(rvest)
library(dplyr)
library(tidyverse)
library(ggiraph)
library(countrycode)
set.seed(42)
anbA <- rbinom(n=1000000,size=100,prob = 90/100)
anbB <- rbinom(n=1000000,size =2,prob = 2/2)
diffs <- anbA/100 - anbB/2
plot(density(diffs, bw=.01))
plot(density(anbA, bw=.01))
plot(density(anbA, bw=.1))
plot(density(anbA, bw=1))
plot(density(anbA, bw=.5))
plot(density(anbB, bw=.5))
plot(density(anbB, bw=.25))
plot(density(anbB, bw=.05))
plot(density(anbB, bw=.01))
sims <- cbind(anbA,anbB)
View(sims)
sims <- cbind(anbA,anbB) %>%
pivot_longer(names_to = "anb",
values_to = "scores")
sims <- as.data.frame(cbind(anbA,anbB)) %>%
pivot_longer(names_to = "anb",
values_to = "scores")
sims <- as.data.frame(cbind(anbA,anbB)) %>%
pivot_longer(names_to = "anb",
values_to = "scores",
cols = "everything")
sims <- as.data.frame(cbind(anbA,anbB)) %>%
pivot_longer(names_to = "anb",
values_to = "scores",
cols = everything())
ggplot(sims, aes(x=scores,fill = anb)) +
geom_density(alpha = .3)
diffs <- anbA/100 - anbB/2
hist(diffs)
sims <- as.data.frame(cbind(anbA/100,anbB/2)) %>%
pivot_longer(names_to = "anb",
values_to = "scores",
cols = everything())
ggplot(sims, aes(x=scores,fill = anb)) +
geom_density(alpha = .3)
?geom_density
ggplot(sims, aes(x=scores,fill = anb)) +
stat_density(aes(alpha = .3),bw=.1 )
ggplot(sims, aes(x=scores,fill = anb)) +
stat_density(alpha = .3,bw=.1 )
ggplot(sims, aes(x=scores,fill = anb)) +
stat_density(alpha = .3,bw=.25 )
ggplot(sims, aes(x=scores,fill = anb)) +
stat_density(alpha = .3,bw=.01 )
ggplot(sims, aes(x=scores,fill = anb)) +
stat_density(alpha = .3,bw=.02)
ggplot(sims, aes(x=scores,fill = anb)) +
stat_density(alpha = .3,bw=.001)
ggplot(sims, aes(x=scores,fill = anb)) +
stat_density(alpha = .3,bw=.01)
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.5, position="identity")
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.5, aes(y=..density..))
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.5, aes(y=..density..)) +
eom_density(alpha=.2)
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.5, aes(y=..density..)) +
geom_density(alpha=.2)
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.8, aes(y=..density..)) +
stat_density(alpha=.2, bw=.01)
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.001, alpha=.8, aes(y=..density..)) +
stat_density(alpha=.2, bw=.01)
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.005, alpha=.8, aes(y=..density..)) +
stat_density(alpha=.2, bw=.01)
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.0075, alpha=.8, aes(y=..density..)) +
stat_density(alpha=.2, bw=.0075)
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.8, aes(y=..density..)) +
stat_density(alpha=.2, bw=.01)
ggplot(diffs, aes(x=diffs)) +
geom_histogram()
ggplot(as.data.frame(diffs), aes(x=diffs)) +
geom_histogram()
ggplot(as.data.frame(diffs), aes(x=diffs)) +
stat_density(alpha = .3,bw=.01)
ggplot(as.data.frame(diffs), aes(x=diffs)) +
stat_density(alpha = .3,bw=.01, fill = "#c2224a")
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.8, aes(y=..density..)) +
scale_fill_manual(values = c("#c2224a95","#c2224a"))
library(shiny); runApp('commasoft_app.R')
runApp('commasoft_app.R')
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.8, aes(y=..density..)) +
scale_fill_manual(values = c("#222d33","#c2224a"))
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.8, aes(y=..density..)) +
scale_fill_manual(values = c("#222d33","#c2224a")) +
theme(legend.position = "bottom")
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.8, aes(y=..density..)) +
scale_fill_manual(values = c("#222d33","#c2224a"),
labels = c("Anbieter A","Anbieter B")) +
theme(legend.position = "bottom",
legend.title = element_blank())
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.8, aes(y=..density..)) +
scale_fill_manual(values = c("#222d33","#c2224a"),
labels = c("Anbieter A","Anbieter B")) +
xlab("Anteil positive Bewertungen") +
ylab("Dichte") +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank())
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.8, aes(y=..density..)) +
scale_fill_manual(values = c("#222d33","#c2224a"),
labels = c("Anbieter A","Anbieter B")) +
xlab("Anteil positive Bewertungen") +
ylab("Dichte") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank())
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.8, aes(y=..density..)) +
scale_fill_manual(values = c("#222d33","#c2224a"),
labels = c("Anbieter A","Anbieter B")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 100)) +
xlab("Anteil positive Bewertungen") +
ylab("Dichte") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank())
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.8, aes(y=..density..)) +
scale_fill_manual(values = c("#222d33","#c2224a"),
labels = c("Anbieter A","Anbieter B")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 101)) +
xlab("Anteil positive Bewertungen") +
ylab("Dichte") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank())
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.8, aes(y=..density..)) +
scale_fill_manual(values = c("#222d33","#c2224a"),
labels = c("Anbieter A","Anbieter B")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 110)) +
xlab("Anteil positive Bewertungen") +
ylab("Dichte") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank())
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.8, aes(y=..density..)) +
scale_fill_manual(values = c("#222d33","#c2224a"),
labels = c("Anbieter A","Anbieter B")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 101)) +
xlab("Anteil positive Bewertungen") +
ylab("Dichte") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank())
set.seed(42)
anbA <- rbinom(n=10000,size=100,prob = 90/100)
anbB <- rbinom(n=10000,size =2,prob = 2/2)
sims <- as.data.frame(cbind(anbA/100,anbB/2)) %>%
pivot_longer(names_to = "anb",
values_to = "scores",
cols = everything())
ggplot(sims, aes(x=scores,fill = anb)) +
#stat_density(alpha = .3,bw=.01)
geom_histogram(binwidth=.01, alpha=.8, aes(y=..density..)) +
scale_fill_manual(values = c("#222d33","#c2224a"),
labels = c("Anbieter A","Anbieter B")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 101)) +
xlab("Anteil positive Bewertungen") +
ylab("Dichte") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank())
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
ggplot(as.data.frame(diffs), aes(x=diffs)) +
stat_density(alpha = .3,bw=.01, fill = "#c2224a") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank())
ggplot(as.data.frame(diffs), aes(x=diffs)) +
stat_density(alpha = .3,bw=.01, fill = "#c2224a") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 101)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank())
ggplot(as.data.frame(diffs), aes(x=diffs)) +
stat_density(alpha = .3,bw=.01, fill = "#c2224a") +
scale_y_continuous(expand = c(0, 0)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank())
ggplot(as.data.frame(diffs), aes(x=diffs)) +
stat_density(alpha = .3,bw=.01, fill = "#c2224a") +
scale_y_continuous(expand = c(0, 0)) +
xlab("Differenz in den Anteilen pos. Bewertungen") +
ylab("Dichte") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank())
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
?round
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
runApp('commasoft_app.R')
fisher.test(rbind(c(90,2),c(10,0)), alternative="less")
fisher.test(rbind(c(90,2),c(10,0)), alternative="greater")
rbind(c(90,2),c(10,0))
rbind(c(2,90),c(0,10))
fisher.test(rbind(c(2,90),c(0,10)), alternative="greater")
fisher.test(rbind(c(2,90),c(0,10)), alternative="less")
(factorial(2+90)*factorial(0+10)*factorial(0+2)*factorial(90+10))/(factorial(2)*factorial(90)*factorial(0)*factorial(10)*factorial(102))
fisher.test(rbind(c(2,90),c(0,10)), alternative="two-sided")
fisher.test(rbind(c(2,90),c(0,10)), alternative="two.sided")
fisher.test(rbind(c(2,90),c(0,10)), alternative="less")
fisher.test(rbind(c(2,90),c(0,10)), alternative="greater")
fisher.test(rbind(c(90,2),c(10,0)), alternative="greater")
fisher.test(rbind(c(90,2),c(10,0)), alternative="less")
fisher.test(rbind(c(90,2),c(10,0)), alternative="greater")
(90*0)/(2*10)
fisher.test(rbind(c(90,2),c(10,0)), alternative="less")
runApp('commasoft_app.R')
