stat_smooth(color = "gray",alpha = .2,linetype = "dashed",size = .5) +
ylab("Gesamtzahl Medaillen") +
xlab("Anzahl Athleten") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>%
select(country,no,Total,onclick_de,c_abbrev,Bronze,Silber,Gold) %>%
filter(!is.na(Total)) %>%
unique() %>%
ggplot(aes(x=no,y=Silber)) +
geom_point_interactive(color = "#e34a33", alpha = .6,size = 3,
aes(onclick = onclick_de,
tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n",
"Silber",Silber,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."))) +
stat_smooth(color = "gray",alpha = .2,linetype = "dashed",size = .5) +
ylab("Gesamtzahl Medaillen") +
xlab("Anzahl Athleten") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
table %>%
select(country_de,no,Total,onclick_de,c_abbrev,Bronze,Silber,Gold) %>%
filter(!is.na(Total)) %>%
unique() %>%
ggplot(aes(x=no,y=Silber)) +
geom_point_interactive(color = "#e34a33", alpha = .6,size = 3,
aes(onclick = onclick_de,
tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n",
"Silber",Silber,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."))) +
stat_smooth(color = "gray",alpha = .2,linetype = "dashed",size = .5) +
ylab("Gesamtzahl Medaillen") +
xlab("Anzahl Athleten") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
p <- table %>%
select(country_de,no,Total,onclick_de,c_abbrev,Bronze,Silber,Gold) %>%
filter(!is.na(Total)) %>%
unique() %>%
ggplot(aes(x=no,y=Silber)) +
geom_point_interactive(color = "#e34a33", alpha = .6,size = 3,
aes(onclick = onclick_de,
tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n",
"Silber",Silber,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."))) +
stat_smooth(color = "gray",alpha = .2,linetype = "dashed",size = .5) +
ylab("Gesamtzahl Medaillen") +
xlab("Anzahl Athleten") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
name(Silber)
name(table$Silber)
names(table$Silber)
names(table)[names(table$Silber)=="Silber"]
attributes(table$Silber)
names(table)
names(table$Silber)
attributes(table[["Silber"]]$label)
attributes(table[["Silber"]])
names(table[["Silber"]])
names(table)[table$Silber]
names(table)["Silber"]
names(table)[names(table) == "Silber"]
p <- table %>%
select(country_de,no,Total,onclick_de,c_abbrev,Bronze,Silber,Gold) %>%
filter(!is.na(Total)) %>%
unique() %>%
ggplot(aes(x=no,y=Silber)) +
geom_point_interactive(color = "#e34a33", alpha = .6,size = 3,
aes(onclick = onclick_de,
tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n",
names(table)[names(table) == "Silber"]," :",Silber,"\n\n",
"Für weitere Informationen bitte klicken."))) +
stat_smooth(color = "gray",alpha = .2,linetype = "dashed",size = .5) +
ylab("Gesamtzahl Medaillen") +
xlab("Anzahl Athleten") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
p <- table %>%
select(country_de,no,Total,onclick_de,c_abbrev,Bronze,Silber,Gold) %>%
filter(!is.na(Total)) %>%
unique() %>%
ggplot(aes(x=no,y=Silber)) +
geom_point_interactive(color = "#e34a33", alpha = .6,size = 3,
aes(onclick = onclick_de,
tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n",
names(table)[names(table) == "Silber"],": ",Silber,"\n\n",
"Für weitere Informationen bitte klicken."))) +
stat_smooth(color = "gray",alpha = .2,linetype = "dashed",size = .5) +
ylab("Gesamtzahl Medaillen") +
xlab("Anzahl Athleten") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE),
opts_hover_inv(css = "opacity:0.1;"),
opts_hover(css = "fill:red;")))
p <- table %>%
select(country_de,no,Total,onclick_de,c_abbrev,Bronze,Silber,Gold) %>%
filter(!is.na(Total)) %>%
unique() %>%
ggplot(aes(x=no,y=Silber)) +
geom_point_interactive(color = "#e34a33", alpha = .6,size = 3,
aes(data_id = country_de,
onclick = onclick_de,
tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n",
names(table)[names(table) == "Silber"],": ",Silber,"\n\n",
"Für weitere Informationen bitte hier klicken."))) +
stat_smooth(color = "gray",alpha = .2,linetype = "dashed",size = .5) +
ylab("Gesamtzahl Medaillen") +
xlab("Anzahl Athleten") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE),
opts_hover_inv(css = "opacity:0.1;"),
opts_hover(css = "fill:red;")))
p <- table %>%
select(country_de,no,Total,onclick_de,c_abbrev,Bronze,Silber,Gold) %>%
filter(!is.na(Total)) %>%
unique() %>%
ggplot(aes(x=no,y=Silber)) +
stat_smooth(color = "gray",alpha = .2,linetype = "dashed",size = .5) +
geom_point_interactive(color = "#e34a33", alpha = .6,size = 3,
aes(data_id = country_de,
onclick = onclick_de,
tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n",
names(table)[names(table) == "Silber"],": ",Silber,"\n\n",
"Für weitere Informationen bitte hier klicken."))) +
ylab("Gesamtzahl Medaillen") +
xlab("Anzahl Athleten") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE),
opts_hover_inv(css = "opacity:0.1;"),
opts_hover(css = "fill:red;")))
p <- table %>%
select(country_de,no,Total,onclick_de,c_abbrev,Bronze,Silber,Gold) %>%
filter(!is.na(Total)) %>%
unique() %>%
ggplot(aes(x=no,y=Silber)) +
stat_smooth(color = "gray",alpha = .2,linetype = "dashed",size = .5) +
geom_point_interactive(color = "#e34a33", alpha = .6,size = 3,
aes(data_id = country_de,
onclick = onclick_de,
tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n",
names(table)[names(table) == "Silber"],": ",Silber,"\n\n",
"Für weitere Informationen bitte hier klicken."))) +
ylab("Gesamtzahl Medaillen") +
xlab("Anzahl Athleten") +
labs(caption = "LOESS smoother") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE),
opts_hover_inv(css = "opacity:0.1;"),
opts_hover(css = "fill:red;")))
p <- table %>%
select(country_de,no,Total,onclick_de,c_abbrev,Bronze,Silber,Gold) %>%
filter(!is.na(Total)) %>%
unique() %>%
ggplot(aes(x=no,y=Silber)) +
stat_smooth(color = "gray",alpha = .2,linetype = "dashed",size = .5) +
geom_point_interactive(color = "#e34a33", alpha = .6,size = 3,
aes(data_id = country_de,
onclick = onclick_de,
tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n",
names(table)[names(table) == "Silber"],": ",Silber,"\n\n",
"Für weitere Informationen bitte hier klicken."))) +
ylab("Gesamtzahl Medaillen") +
xlab("Anzahl Athleten") +
labs(caption = "Regression via LOESS smoother") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE),
opts_hover_inv(css = "opacity:0.1;"),
opts_hover(css = "fill:red;")))
p <- table %>% arrange(-no) %>%
slice_head(n=3*50) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar_interactive(stat = "identity", fill = "#e34a33",
aes(tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de,
data_id = c_abbrev)) +
ylab("Athleten") +
xlab("") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE),
opts_hover_inv(css = "opacity:0.4;"),
opts_hover(css = "fill:red;")))
p <- table %>% arrange(-no) %>%
slice_head(n=3*50) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar_interactive(stat = "identity", fill = "#e34a33",
aes(tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de,
data_id = c_abbrev)) +
ylab("Athleten") +
xlab("") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE),
opts_hover_inv(css = "opacity:0.6;"),
opts_hover(css = "fill:red;")))
p <- table %>% arrange(-table$Total,table$c_abbrev) %>%
slice_head(n=3*20) %>%
ggplot(aes(x=reorder(c_abbrev,Total),
y=count, fill = medfac)) +
geom_bar_interactive(position="stack", stat="identity",color = "gray", size=.1,
aes(tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Gesamtzahl Medaillen: ",Total,"\n",
"Gold: ",Gold,"\n",
"Silber: ",Silber,"\n",
"Bronze: ",Bronze,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de,
data_id = c_abbrev)) +
coord_flip() +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
scale_fill_manual(values = c("#fee8c8","#fdbb84","#e34a33"),
guide = guide_legend(reverse = TRUE)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE),
opts_hover_inv(css = "opacity:0.6;"),
opts_hover(css = "fill:red;")))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE),
opts_hover_inv(css = "opacity:0.6;")))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE),
opts_hover_inv(css = "opacity:0.6;"),
opts_hover(css = NULL, reactive = FALSE)))
p <- table %>% arrange(-no) %>%
slice_head(n=3*50) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar_interactive(stat = "identity", fill = "#e34a33",
aes(tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de,
data_id = c_abbrev)) +
ylab("Athleten") +
xlab("") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
p <- table %>% arrange(-table$Total,table$c_abbrev) %>%
slice_head(n=3*20) %>%
ggplot(aes(x=reorder(c_abbrev,Total),
y=count, fill = medfac)) +
geom_bar_interactive(position="stack", stat="identity",color = "gray", size=.1,
aes(tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Gesamtzahl Medaillen: ",Total,"\n",
"Gold: ",Gold,"\n",
"Silber: ",Silber,"\n",
"Bronze: ",Bronze,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de)) +
coord_flip() +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
scale_fill_manual(values = c("#fee8c8","#fdbb84","#e34a33"),
guide = guide_legend(reverse = TRUE)) +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
p <- table %>% arrange(-no) %>%
slice_head(n=3*50) %>%
ggplot(aes(x=reorder(c_abbrev,no),y=no)) +
geom_bar_interactive(stat = "identity", fill = "#e34a33",
aes(tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de)) +
ylab("Athleten") +
xlab("") +
coord_flip() +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
p <- table %>%
select(country_de,no,Total,onclick_de,c_abbrev,Bronze,Silber,Gold) %>%
filter(!is.na(Total)) %>%
unique() %>%
ggplot(aes(x=no,y=Silber)) +
stat_smooth(color = "gray",alpha = .2,linetype = "dashed",size = .5) +
geom_point_interactive(color = "#e34a33", alpha = .6,size = 3,
aes(data_id = country_de,
onclick = onclick_de,
tooltip = paste0("<strong>",country_de,"</strong>\n\n",
"Anzahl Athleten: ",no,"\n",
names(table)[names(table) == "Silber"],": ",Silber,"\n\n",
"Für weitere Informationen bitte hier klicken."))) +
ylab("Gesamtzahl Medaillen") +
xlab("Anzahl Athleten") +
labs(caption = "Regression via LOESS smoother") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4),
axis.text.x = element_text(size = 6),
panel.grid.major.x = element_line(color = "gray", size = .2),
panel.grid.major.y = element_blank(),
legend.key.size = unit(.75,"line"),
legend.text = element_text(size = 6))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE),
opts_hover_inv(css = "opacity:0.1;"),
opts_hover(css = "fill:red;")))
