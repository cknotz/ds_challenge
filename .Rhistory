ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = "")
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank())
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank())
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,vjust = .5))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,hjust = .5))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,hjust = -.5))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,hjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,hjust = 0))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,hjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 10,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 8,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 7,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
scale_color_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
xlim(0,125) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
xlim(c(0,125)) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
ylim(c(0,125)) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
url <- "https://en.wikipedia.org/wiki/2016_Summer_Olympics_medal_table"
xpath <- "/html/body/div[3]/div[3]/div[5]/div[1]/table[2]"
page <- read_html(url)
# Extracting table
alltables <- html_nodes(page, "table")
table <- alltables[[2]] %>%
html_table(fill = T)
# Cleaning
table <- table[which(grepl("Totals", table$NOC)!=TRUE),]
table <- table %>%
separate(NOC,
c("country","c_abbrev"),
sep = -6)
table$c_abbrev <- gsub("[()]|(^\\s+)|(\\s+$)", "",table$c_abbrev)
# Reading links
link <- page %>%
html_nodes(xpath = "//th/a") %>%
html_attr("href")
country <- gsub("/wiki/|_at_the_2016_Summer_Olympics", "", link)
country <- gsub("_", " ", country)
links <- data.frame(country,link)
links <- links[which(grepl("Summer Olympic|Winter Olympic",links$country)!=TRUE),]
links$link <- gsub("/wiki/", "https://en.wikipedia.org/wiki/",links$link)
# Merge
table <- merge(table,links,
by = "country")
rm(alltables,page, url, xpath,country,link, links) # removing clutter
# Reshape for graph
table <- pivot_longer(table,
cols = c("Gold","Silver","Bronze"),
names_to = "medal",
values_to = "count")
table$medal <- factor(table$medal, labels = c("Gold","Silver","Bronze"))
# Graph
#######
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
# Scraping Wikipedia Tables
###########################
library(ggplot2)
library(rvest)
library(dplyr)
library(tidyverse)
# Downloading website
url <- "https://en.wikipedia.org/wiki/2016_Summer_Olympics_medal_table"
xpath <- "/html/body/div[3]/div[3]/div[5]/div[1]/table[2]"
page <- read_html(url)
# Extracting table
alltables <- html_nodes(page, "table")
table <- alltables[[2]] %>%
html_table(fill = T)
# Cleaning
table <- table[which(grepl("Totals", table$NOC)!=TRUE),]
table <- table %>%
separate(NOC,
c("country","c_abbrev"),
sep = -6)
table$c_abbrev <- gsub("[()]|(^\\s+)|(\\s+$)", "",table$c_abbrev)
# Reading links
link <- page %>%
html_nodes(xpath = "//th/a") %>%
html_attr("href")
country <- gsub("/wiki/|_at_the_2016_Summer_Olympics", "", link)
country <- gsub("_", " ", country)
links <- data.frame(country,link)
links <- links[which(grepl("Summer Olympic|Winter Olympic",links$country)!=TRUE),]
links$link <- gsub("/wiki/", "https://en.wikipedia.org/wiki/",links$link)
# Merge
table <- merge(table,links,
by = "country")
rm(alltables,page, url, xpath,country,link, links) # removing clutter
# Reshape for graph
table <- pivot_longer(table,
cols = c("Gold","Silver","Bronze"),
names_to = "medal",
values_to = "count")
table$medal <- factor(table$medal, labels = c("Gold","Silver","Bronze"))
# Graph
#######
ggplot(table, aes(x=reorder(c_abbrev,-Total),
y=count, fill = medal)) +
geom_bar(position="stack", stat="identity") +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(size = 6,angle = 25,hjust = 1,vjust = 1))
tooltip <- paste0("Country: ",table$country,"/n",
"Gold medals: ",table$count[table$medal=="Gold",])
tooltip <- paste0("Country: ",table$country,"/n",
"Gold medals: ",table$count[table$medal=="Gold"],)
tooltip <- paste0("Country: ",table$country,"/n",
"Gold medals: ",table$count[which(table$medal=="Gold"),])
# Scraping Wikipedia Tables
###########################
library(ggplot2)
library(rvest)
library(dplyr)
library(tidyverse)
library(ggiraph)
library(countrycode)
# Downloading website
url <- "https://en.wikipedia.org/wiki/2016_Summer_Olympics_medal_table"
xpath <- "/html/body/div[3]/div[3]/div[5]/div[1]/table[2]"
page <- read_html(url)
# Extracting table
alltables <- html_nodes(page, "table")
table <- alltables[[2]] %>%
html_table(fill = T)
# Cleaning
table <- table[which(grepl("Totals", table$NOC)!=TRUE),]
table <- table %>%
separate(NOC,
c("country","c_abbrev"),
sep = -6)
table$c_abbrev <- gsub("[()]|(^\\s+)|(\\s+$)", "",table$c_abbrev)
# Reading links
link <- page %>%
html_nodes(xpath = "//th/a") %>%
html_attr("href")
country <- gsub("/wiki/|_at_the_2016_Summer_Olympics", "", link)
country <- gsub("_", " ", country)
links <- data.frame(country,link)
links <- links[which(grepl("Summer Olympic|Winter Olympic",links$country)!=TRUE),]
links$link <- gsub("/wiki/", "",links$link)
# # Merge
table <- merge(table,links,
by = "country")
rm(alltables,page, url, xpath,country,links,link) # removing clutter
# Cleaning & translating country names
table <- table[which(table$country!="Independent Olympic Athletes"),]
table$country_de <- countrycode(table$country,'country.name','country.name.de')
# custom name changes
table$country_de[which(table$country_de=="Korea, Demokratische Volksrepublik")] <- "Nordkorea"
table$country_de[which(table$country_de=="Korea, Republik von")] <- "Südkorea"
table$country_de[which(table$country_de=="Russische Föderation")] <- "Russland"
# Data for graph functions
table$link <- paste0("https://en.wikipedia.org/wiki/",table$link)
table$onclick <- sprintf("window.open(\"%s%s\")","",table$link)
# German links
table$link_de <- paste0("https://de.wikipedia.org/wiki/Olympische_Sommerspiele_2016/Teilnehmer_(",
table$country_de,
")") %>%
gsub(" ","_",.)
table$onclick_de <- sprintf("window.open(\"%s%s\")","",table$link_de)
# Reshape for graph
table <- pivot_longer(table,
cols = c("Gold","Silver","Bronze"),
names_to = "medal",
values_to = "count")
# Values for tooltip
tiptab <- pivot_wider(table[,c("country","medal","count")],
id_cols = c("country","medal"),
names_from = "medal",
values_from = "count")
# Merging
table <- merge(table,tiptab,by = "country")
rm(tiptab)
# Graph
#######
tooltip_css <- "background-color:gray;color:white;padding:10px;border-radius:5px;font-family: Lora, sans-serif;font-weight:lighter;font-size:12px;"
p <- ggplot(table, aes(x=reorder(c_abbrev,Total),
y=count, fill = medal)) +
geom_bar_interactive(position="stack", stat="identity",
aes(tooltip = paste0("Land: ",country_de,"\n\n",
"Gesamtzahl Medaillen: ",Total,"\n",
"Gold: ",Gold,"\n",
"Silber: ",Silver,"\n",
"Bronze: ",Bronze,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de)) +
coord_flip() +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
p <- ggplot(table, aes(x=reorder(c_abbrev,Total),
y=count, fill = medal)) +
geom_bar_interactive(position="stack", stat="identity",
aes(tooltip = paste0("Land: ",country_de,"\n\n",
"Gesamtzahl Medaillen: ",Total,"\n",
"Gold: ",Gold,"\n",
"Silber: ",Silver,"\n",
"Bronze: ",Bronze,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de)) +
coord_flip() +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE)))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE),
opts_hover_inv(css = "opacity: 0.25;")))
# Scraping Wikipedia Tables
###########################
library(ggplot2)
library(rvest)
library(dplyr)
library(tidyverse)
library(ggiraph)
library(countrycode)
# Downloading website
url <- "https://en.wikipedia.org/wiki/2016_Summer_Olympics_medal_table"
xpath <- "/html/body/div[3]/div[3]/div[5]/div[1]/table[2]"
page <- read_html(url)
# Extracting table
alltables <- html_nodes(page, "table")
table <- alltables[[2]] %>%
html_table(fill = T)
# Cleaning
table <- table[which(grepl("Totals", table$NOC)!=TRUE),]
table <- table %>%
separate(NOC,
c("country","c_abbrev"),
sep = -6)
table$c_abbrev <- gsub("[()]|(^\\s+)|(\\s+$)", "",table$c_abbrev)
# Reading links
link <- page %>%
html_nodes(xpath = "//th/a") %>%
html_attr("href")
country <- gsub("/wiki/|_at_the_2016_Summer_Olympics", "", link)
country <- gsub("_", " ", country)
links <- data.frame(country,link)
links <- links[which(grepl("Summer Olympic|Winter Olympic",links$country)!=TRUE),]
links$link <- gsub("/wiki/", "",links$link)
# # Merge
table <- merge(table,links,
by = "country")
rm(alltables,page, url, xpath,country,links,link) # removing clutter
# Cleaning & translating country names
table <- table[which(table$country!="Independent Olympic Athletes"),]
table$country_de <- countrycode(table$country,'country.name','country.name.de')
# custom name changes
table$country_de[which(table$country_de=="Korea, Demokratische Volksrepublik")] <- "Nordkorea"
table$country_de[which(table$country_de=="Korea, Republik von")] <- "Südkorea"
table$country_de[which(table$country_de=="Russische Föderation")] <- "Russland"
# Data for graph functions
table$link <- paste0("https://en.wikipedia.org/wiki/",table$link)
table$onclick <- sprintf("window.open(\"%s%s\")","",table$link)
# German links
table$link_de <- paste0("https://de.wikipedia.org/wiki/Olympische_Sommerspiele_2016/Teilnehmer_(",
table$country_de,
")") %>%
gsub(" ","_",.)
table$onclick_de <- sprintf("window.open(\"%s%s\")","",table$link_de)
# Reshape for graph
table <- pivot_longer(table,
cols = c("Gold","Silver","Bronze"),
names_to = "medal",
values_to = "count")
# Values for tooltip
tiptab <- pivot_wider(table[,c("country","medal","count")],
id_cols = c("country","medal"),
names_from = "medal",
values_from = "count")
# Merging
table <- merge(table,tiptab,by = "country")
rm(tiptab)
# Graph
#######
tooltip_css <- "background-color:gray;color:white;padding:10px;border-radius:5px;font-family: Lora, sans-serif;font-weight:lighter;font-size:12px;"
p <- ggplot(table, aes(x=reorder(c_abbrev,Total),
y=count, fill = medal)) +
geom_bar_interactive(position="stack", stat="identity",
aes(tooltip = paste0("Land: ",country_de,"\n\n",
"Gesamtzahl Medaillen: ",Total,"\n",
"Gold: ",Gold,"\n",
"Silber: ",Silver,"\n",
"Bronze: ",Bronze,"\n\n",
"Für weitere Informationen bitte auf den Balken klicken."),
onclick = onclick_de)) +
coord_flip() +
xlab("") +
ylab("") +
scale_y_continuous(expand = c(0, 0), limits = c(0, 125)) +
theme_bw() +
scale_fill_brewer(palette = "Reds") +
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.y = element_text(size = 4))
girafe(ggobj = p,
fonts=list(sans = "Arial"),
options = list(
opts_tooltip(offx = 10, offy = 10,css = tooltip_css,use_cursor_pos = TRUE),
opts_toolbar(saveaspng = FALSE),
opts_hover_inv(css = "opacity:0.4;")))
